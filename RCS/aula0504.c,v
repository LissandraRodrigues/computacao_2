head	1.5;
access;
symbols;
locks
	luiza.rosa:1.5; strict;
comment	@ * @;


1.5
date	2022.01.17.00.48.00;	author luiza.rosa;	state Exp;
branches;
next	1.4;

1.4
date	2022.01.16.23.25.28;	author luiza.rosa;	state Exp;
branches;
next	1.3;

1.3
date	2022.01.16.23.21.26;	author luiza.rosa;	state Exp;
branches;
next	1.2;

1.2
date	2022.01.16.13.54.54;	author luiza.rosa;	state Exp;
branches;
next	1.1;

1.1
date	2022.01.15.01.29.18;	author luiza.rosa;	state Exp;
branches;
next	;


desc
@Programa: Gera Digitos Vericadores de RG.
@


1.5
log
@Programa: Atualizacao da descricao.
@
text
@/*
 * Universidade Federal do Rio de Janeiro
 * Escola Politecnica
 * Departamento de Eletronica e de Computacao
 * EEL270 - Computacao II - Turma 2021/2
 * Professor: Marcelo Luiz Drumond Lanza
 *
 * Autor: Luiza Lissandra Rodrigues Rosa
 * Descricao: Implementacao das funcoes de gerar
 *			      o digito verificador do RG e validacao
 *            do RG com entradas string.
 *
 * $Author: luiza.rosa $
 * $Date: 2022/01/16 23:25:28 $
 * $Log: aula0504.c,v $
 * Revision 1.4  2022/01/16 23:25:28  luiza.rosa
 * Programa: Atualizacao da descricao do programa.[
 *
 * Revision 1.3  2022/01/16 23:21:26  luiza.rosa
 * Programa: Insercao da implementacao da funcao Validar RG.
 *
 * Revision 1.2  2022/01/16 13:54:54  luiza.rosa
 * Programa: Correcao do programa e insercao de melhores praticas de programacao.
 *
 * Revision 1.1  2022/01/15 01:29:18  luiza.rosa
 * Initial revision
 *
*/

#include "aula0504.h"

#define COMPRIMENTO_RG														9

tipoErros
GerarDigitosVerificadoresRg (char *rg, char *digito)
{

	unsigned contador,
					 resultado = 0,
					 peso = 2;

	for (contador = 0; contador < (COMPRIMENTO_RG - 1); contador++)
	{
		resultado += (peso * (rg [contador] - '0'));
		peso++;
	}
	
	resultado %= 11;
	resultado = 11 - resultado;

	*digito = resultado + '0'; 	

	return sucesso;
	
}

tipoErros
ValidarRg (char *rg)
{
	
	char rgAnalisado [COMPRIMENTO_RG];

	unsigned indice;

	char digito;

	tipoErros resultado = valido;

	for (indice = 0; indice < (COMPRIMENTO_RG - 1); indice++)
		rgAnalisado [indice] = rg [indice];

	GerarDigitosVerificadoresRg (rgAnalisado, &digito);

	if (digito != rg [8])
		resultado = invalido;
	
	return resultado;
}

/* $RCSfile: aula0504.c,v $ */
@


1.4
log
@Programa: Atualizacao da descricao do programa.[
@
text
@d9 3
a11 1
 * Descricao: Programa que gera o digito verificador do RG e validacao com string.
d14 1
a14 1
 * $Date: 2022/01/16 23:21:26 $
d16 3
@


1.3
log
@Programa: Insercao da implementacao da funcao Validar RG.
@
text
@d9 1
a9 1
 * Descricao: Programa que gera o codigo verificador do RG com string.
d12 1
a12 1
 * $Date: 2022/01/16 13:54:54 $
d14 3
@


1.2
log
@Programa: Correcao do programa e insercao de melhores praticas de programacao.
@
text
@d12 1
a12 1
 * $Date: 2022/01/15 01:29:18 $
d14 3
d49 23
@


1.1
log
@Initial revision
@
text
@d11 6
a16 3
 * $Author$
 * $Date$
 * $Log$
d21 1
a21 1
#define COMPRIMENTO_RG														8
d31 1
a31 1
	for (contador = 0; contador < COMPRIMENTO_RG; contador++)
a39 2
	/*
	strcat (*digito, resultado + '0');
a40 1
	*/
d46 1
a46 1
/* $RCSfile$ */
@
