head	1.5;
access;
symbols;
locks
	luiza.rosa:1.5; strict;
comment	@ * @;


1.5
date	2022.01.06.13.05.37;	author luiza.rosa;	state Exp;
branches;
next	1.4;

1.4
date	2022.01.06.13.03.13;	author luiza.rosa;	state Exp;
branches;
next	1.3;

1.3
date	2022.01.06.01.47.58;	author luiza.rosa;	state Exp;
branches;
next	1.2;

1.2
date	2022.01.05.16.50.40;	author luiza.rosa;	state Exp;
branches;
next	1.1;

1.1
date	2022.01.04.21.42.47;	author luiza.rosa;	state Exp;
branches;
next	;


desc
@Programa: Calcula o valor de um numero elevado a um expoente.
Com recursividade.
@


1.5
log
@Programa: Insercao de melhores praticas de programacao.
@
text
@/*
 * Universidade Federal do Rio de Janeiro
 * Escola Politecnica
 * Departamento de Eletronica e de Computacao
 * EEL270 - Computacao II - Turma 2021/2
 * Professor: Marcelo Luiz Drumond Lanza
 *
 * Autor: Luiza Lissandra Rodrigues Rosa
 * Descricao: Programa que calcula um numero elevado a um expoente
 *						com Recursividade.
 *
 * $Author: luiza.rosa $
 * $Date: 2022/01/06 13:03:13 $
 * $Log: aula0401a.c,v $
 * Revision 1.4  2022/01/06 13:03:13  luiza.rosa
 * Programa: Insercao de melhores praticas de programacao.
 *
 * Revision 1.3  2022/01/06 01:47:58  luiza.rosa
 * Programa: Insercao de melhores praticas de programacao e tratamento de erros.
 *
 * Revision 1.2  2022/01/05 16:50:40  luiza.rosa
 * Programa: Insercao de melhores praticas de programacao.
 *
 * Revision 1.1  2022/01/04 21:42:47  luiza.rosa
 * Initial revision
 *
*/

#include <math.h>

#include "aula0401.h"

long double
CalcularExponencial (double base, int expoente)
{

		if ((!base) && (expoente < 0))
		{
			#if defined (__STRICT_ANSI__) && defined (__linux__)
				return 1.0 / 0.0;
			#else
				return INFINITY;
			#endif
		}
	
		if (!expoente)
			return 1;

		if (expoente == 1)
			return base;

		if (expoente > 0)
		{
			return base * CalcularExponencial (base, expoente - 1);
		}
		else
		{
			return (1 / base) * CalcularExponencial (base, expoente + 1);
		}

}

/* $RCSfile: aula0401a.c,v $ */
@


1.4
log
@Programa: Insercao de melhores praticas de programacao.
@
text
@d10 1
a10 1
							com Recursividade.
d13 1
a13 1
 * $Date: 2022/01/06 01:47:58 $
d15 3
@


1.3
log
@Programa: Insercao de melhores praticas de programacao e tratamento de erros.
@
text
@d13 1
a13 1
 * $Date: 2022/01/05 16:50:40 $
d15 3
d33 1
@


1.2
log
@Programa: Insercao de melhores praticas de programacao.
@
text
@d13 1
a13 1
 * $Date: 2022/01/04 21:42:47 $
d15 3
d30 10
a39 4
		if(!base && expoente < 0)
			return INFINITY;

		if(!expoente)
d42 1
a42 1
		if(expoente == 1)
d45 8
a52 1
		return base * CalcularExponencial (base, expoente - 1);
@


1.1
log
@Initial revision
@
text
@d12 6
a17 3
 * $Author$
 * $Date$
 * $Log$
d20 2
d27 2
d40 1
a40 1
/* $RCSfile$ */
@
